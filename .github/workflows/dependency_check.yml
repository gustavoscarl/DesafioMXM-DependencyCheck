name: Dependency Check on Backend

on:
  push:
    paths:
      - "PayWiseBackend/PayWiseBackend.csproj"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "30 10 * * *"

jobs:
  dependency-check:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Set Path for Backend
        if: github.workflow == 'Dependency Check on Backend'
        run: echo "DEP_CHECK_PATH=./cicd/dependency-check-report-backend/dependency-check-report.json" >> $GITHUB_ENV

      - name: Set Path for Frontend
        if: github.workflow == 'Dependency Check on Frontend'
        run: echo "DEP_CHECK_PATH=./cicd/dependency-check-report-frontend/dependency-check-report.json" >> $GITHUB_ENV

      - name: Cache NVD Database
        uses: actions/cache@v4
        id: cache-nvd
        if: always()
        with:
          path: |
            dependency-check
          key: nvd-owasp123-dpcheck-mxm
          restore-keys: nvd-owasp123-dpcheck-mxm

      - name: Log Cache Hit Status
        run: |
          echo "Cache hit status: ${{ steps.cache-nvd.outputs.cache-hit }}"

      - name: Download Dependency-Check
        if: ${{ steps.cache-nvd.outputs.cache-hit != 'true' }}
        run: |
          Invoke-WebRequest -Uri "https://github.com/jeremylong/DependencyCheck/releases/download/v9.1.0/dependency-check-9.1.0-release.zip" -OutFile "dependency-check.zip"
          Expand-Archive -Path "dependency-check.zip" -DestinationPath "."

      - name: Run Dependency-Check CLI
        run: |
          .\dependency-check\bin\dependency-check.bat --project "PayWiseBackend" --scan "./PayWiseBackend" --out "./cicd/dependency-check-report-backend" --format "HTML" --format "JSON" --suppression "./cicd/dependency-check-config/suppression-backend.xml" --nvdApiKey="${{ secrets.NVDAPIKEY }}"

      - name: Commit Dependency-Check Reports
        run: |
          git fetch --all
          $env:GITHUB_EVENT_NAME = "${{ github.event_name }}"
          if ($env:GITHUB_EVENT_NAME -eq 'pull_request') {
            git checkout main
            git switch main } else {
            $branch_name = "${{ github.ref }}".replace('refs/heads/', '')
            git checkout $branch_name
            git switch $branch_name }
          git add ./cicd/dependency-check-report-backend/*
          git commit -m "Add Dependency Check Reports" || echo "No changes to commit"
          git push origin HEAD --force
        shell: pwsh

      - name: Vulnerabilities Report
        id: check_vulnerabilities
        run: .\cicd\scripts\run_dependencycheck.ps1 -ReportPath "./cicd/dependency-check-report-backend/dependency-check-report.json"

      - name: Fail Build if High or Critical Vulnerabilities Found
        if: ${{ steps.check_vulnerabilities.outputs.vulnerable == 'true' }}
        run: .\cicd\scripts\high_critical_vulnefound.ps1 -highLevel "${{ steps.check_vulnerabilities.outputs.highLevel }}" -criticalLevel "${{ steps.check_vulnerabilities.outputs.criticalLevel }}"
        shell: pwsh

      - name: Handle Low and Medium Level Vulnerabilities
        if: steps.check_vulnerabilities.outputs.vulnerable != 'true' && steps.check_vulnerabilities.outputs.warn == 'true'
        run: .\cicd\scripts\low_medium_vulnefound.ps1 -lowLevel "${{ steps.check_vulnerabilities.outputs.highLevel }}" -mediumLevel "${{ steps.check_vulnerabilities.outputs.criticalLevel }}"
        shell: pwsh
