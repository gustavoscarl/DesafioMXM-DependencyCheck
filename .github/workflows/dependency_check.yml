name: Dependency Check no Backend

on:
  push:
    paths:
      - "PayWiseBackend/**/*.csproj"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "05 10 * * *"

env:
  NOME_PROJETO: PayWiseBackend
  SCANEAR_CAMINHO: ./PayWiseBackend
  RESULTADO_CAMINHO: ./.cicd/dependency-check-report-backend
  ARQUIVO_SUPRESSAO: ./.cicd/dependency-check-config/suppression-backend.xml
  LINK_SUPRESSAO: ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.ref_name }}/.cicd/dependency-check-config/suppression-backend.xml
  LINK_RELATORIOS: ${{ github.server_url }}/${{ github.repository }}/tree/${{ github.ref_name }}/.cicd/dependency-check-report-backend
  USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
  APIKEY: ${{ secrets.NVDAPIKEY }}

jobs:
  dependency-check-backend:
    runs-on: windows-latest
    steps:
      - name: Checkout Código
        uses: actions/checkout@v4

      - name: Instalar Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Cachear Arquivos NVD
        uses: actions/cache@v4
        id: cache-nvd
        with:
          save-always: true
          path: |
            dependency-check
          key: nvd-owasp123-dpcheck-mxm
          restore-keys: nvd-owasp123-dpcheck-mxm

      - name: Extrair o Nome da Branch para Links
        shell: pwsh
        run: |
          $branch_base = "${{ github.base_ref }}"
          $branch_head = "${{ github.head_ref }}".replace('refs/heads/', '').replace('refs/pull/', 'pr-').replace('/merge', '')

          $branch = "${{ github.ref }}".replace('refs/heads/', '')
          $link_supressao = "${{ github.server_url }}/${{ github.repository }}/blob/$branch/.cicd/dependency-check-config/suppression-backend.xml"

          if ("${{ github.event_name }}" -eq "schedule") {
            $date = Get-Date -Format "dd-MM-yyyy"
            $new_branch_name = "schedule-$date-reports"
            $branch = $new_branch_name
          }
          if ("${{ github.event_name }}" -eq "pull_request") {
            $branch_name = "${{ github.ref }}".replace('refs/heads/', '').replace('refs/pull/', 'pr-').replace('/merge', '') 
            $date = Get-Date -Format "yyyy-MM-dd"
            $new_branch_name = "$branch_name-$date-reports"
            $branch = $new_branch_name
            $link_supressao = "${{ github.server_url }}/${{ github.repository }}/blob/$branch_head/.cicd/dependency-check-config/suppression-backend.xml"
          }

          echo "branch=$branch" | Out-File -Append $env:GITHUB_OUTPUT
          echo "LINK_SUPRESSAO=$link_supressao" | Out-File -Append $env:GITHUB_ENV
          echo "LINK_RELATORIOS=${{ github.server_url }}/${{ github.repository }}/tree/$branch/.cicd/dependency-check-report-backend" | Out-File -Append $env:GITHUB_ENV
        id: extrair_branch

      - name: Instalar Dependency-Check
        if: ${{ steps.cache-nvd.outputs.cache-hit != 'true' }}
        run: |
          Invoke-WebRequest -Uri "https://github.com/jeremylong/DependencyCheck/releases/download/v9.1.0/dependency-check-9.1.0-release.zip" -OutFile "dependency-check.zip"
          Expand-Archive -Path "dependency-check.zip" -DestinationPath "."

      - name: Executar Dependency Check CLI Scan
        run: |
          .\dependency-check\bin\dependency-check.bat --project "${{ env.NOME_PROJETO }}" --scan "${{ env.SCANEAR_CAMINHO }}" --out "${{ env.RESULTADO_CAMINHO }}" --format "HTML" --format "JSON" --suppression "${{ env.ARQUIVO_SUPRESSAO }}" --nvdApiKey="${{ env.APIKEY }}"

      - name: Salvar Arquivos de Relatório
        uses: actions/upload-artifact@v4
        id: relatorios-artifact
        with:
          name: relatorios-dependencycheck
          path: ${{env.RESULTADO_CAMINHO}}/*

      - name: Commitar Relatórios do Dependency Check
        run: |
          git fetch --all
          git config --local user.email "${{ env.USER_EMAIL }}"
          git config --local user.name "gustavoscarl"
          $env:GITHUB_EVENT_NAME = "${{ github.event_name }}"
          $branch_name = "${{ github.ref }}".replace('refs/heads/', '').replace('refs/pull/', 'pr-').replace('/merge', '')

          git checkout $branch_name
          git switch $branch_name
          git pull origin $branch_name

          if ($env:GITHUB_EVENT_NAME -eq 'pull_request') {
            $date = Get-Date -Format "yyyy-MM-dd"
            $new_branch_name = "$branch_name-$date-reports"
            git checkout -b $new_branch_name
            git pull origin $new_branch_name
          }
          if ($env:GITHUB_EVENT_NAME -eq 'schedule') {
            $date = Get-Date -Format "yyyy-MM-dd"
            $new_branch_name = "schedule-$date-reports"
            git checkout -b $new_branch_name
            git pull origin $new_branch_name
          }

          git add "${{env.RESULTADO_CAMINHO}}/*"
          git commit -m "Add Dependency Check Reports"

          if ($env:GITHUB_EVENT_NAME -eq 'pull_request' -or $env:GITHUB_EVENT_NAME -eq 'schedule') {
            git push origin $new_branch_name
          }
          else {
            git push origin $branch_name
          }

      - name: Relatório de Vulnerabilidade
        id: checar_vulnerabilidades
        run: .\.cicd\scripts\run_dependencycheck.ps1 -CaminhoRelatorio "${{env.RESULTADO_CAMINHO}}/dependency-check-report.json" -linkArtifact "${{ steps.relatorios-artifact.outputs.artifact-url }}" -linkRelatorios "${{env.LINK_RELATORIOS}}"

      - name: Falha na Build se Vulnerabilidades Altas ou Críticas Forem Encontradas
        if: ${{ steps.checar_vulnerabilidades.outputs.vulnerabilidade == 'true' }}
        run: .\.cicd\scripts\high_critical_vulnefound.ps1 -altoNivel "${{ steps.checar_vulnerabilidades.outputs.altoNivel }}" -criticoNivel "${{ steps.checar_vulnerabilidades.outputs.criticoNivel }}" -linkSupressao "${{env.LINK_SUPRESSAO}}" -linkArtifact "${{ steps.relatorios-artifact.outputs.artifact-url }}" -linkRelatorios "${{env.LINK_RELATORIOS}}"
        shell: pwsh

      - name: Lidar com Vulnerabilidades de Baixo e Médio nível
        if: steps.checar_vulnerabilidades.outputs.vulnerabilidade != 'true' && steps.checar_vulnerabilidades.outputs.aviso == 'true'
        run: .\.cicd\scripts\low_medium_vulnefound.ps1 -baixoNivel "${{ steps.checar_vulnerabilidades.outputs.baixoNivel }}" -medioNivel "${{ steps.checar_vulnerabilidades.outputs.medioNivel }}" -linkSupressao "${{env.LINK_SUPRESSAO}}" -linkArtifact "${{ steps.relatorios-artifact.outputs.artifact-url }}" -linkRelatorios "${{env.LINK_RELATORIOS}}"
        shell: pwsh
